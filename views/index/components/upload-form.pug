style.
  .form {
    height: max-content;
    min-width: 450px;
    min-height: 480px;
    z-index: 100;
  }
  .disabled-paste-button, .paste-button {
    display: inline-block;
    margin: 0;
    margin-left: 5px;
    cursor: pointer;
    color: #339233;
  }

  #downloadLinkLabel, .paste-button {
    /*pointer-events: none;*/

  }

  #disable-download-link {
    cursor: pointer !important;
  }

  .paste-button {
    /*pointer-events: ;*/
  }

  .backdrop {
    height: 100%;
    width: 100%;
    background-color: rgba(20,20,20, 0.5);
    position: absolute;
    top: 0;
    z-index: 90;
  }
  .close-btn {
    background-color: transparent;
    color: black;
    border-style: none;
    font-size: 22px;
    position: absolute;
    margin: -23px 0 0px 385px;
    cursor: pointer;
  }

  .close-btn:hover {
    color: rgba(0, 0, 0, 0.7);
  }

  .file-turned-off {
    opacity: 0.5;
    pointer-events: none;
  }

  input::placeholder {
    color: #636262;
  }


.backdrop
form.form#form
  button.close-btn(type='button')
    i.fa-solid.fa-xmark
  .group
    label(for='file') Select (or drop) file
    input#file(type='file' multiple="multiple")
  if !ytdlp
    .group
      label#disable-download-link(for='downloadLink') Enter a link for automatic download
        p.disabled-paste-button PASTE
      input(disabled #disable-download-link style="cursor:pointer;")(type='text' value="Paid Feature, More Info Coming Soon")
  if ytdlp
    label(for='downloadLink') Enter a link for automatic download
      p.paste-button PASTE
    input#downloadLink(type='text' placeholder="Enter a link to a video here")
  .group
    label(for='languageSelect')#languageLabel Language (#{languagesArray.length} Options)
    .wrapper
      button#languageSelect.select-btn(type='button')
        span#language.select-value(data-value='auto-detect' name='language') Auto-Detect
        i.fa-solid.fa-angle-down
      .content
        .search
          i.fa-solid.fa-magnifying-glass
          input(spellcheck='false' type='search' placeholder='Filter...' tabindex='0')
        ul.options.languages
          each language in languagesArray
            li.option(data-value=language.value tabindex='0')= language.name
  .group
    label(for='modelSelect')#modelLabel Model (#{modelsArray.length} Options)
    .wrapper
      button#modelSelect.select-btn(type='button')
        span#model.select-value(name='model')= modelsArray[0].name
        i.fa-solid.fa-angle-down
      .content
        .search
          i.fa-solid.fa-magnifying-glass
          input(spellcheck='false' type='search' placeholder='Filter...')
        ul.options.models
          each model in modelsArray
            li.option(data-value= model.value tabindex='0')= model.name
  .group.translateHolder
    label#translateLabel(for='translate') Translate to different languages
    input#translate(type='checkbox' name='translate')
  button#upload-button.submit-btn(type='submit') Upload


  script.
    let l = console.log;
    let pasteButtonTurnedOff = false;

    $(document).on('click', function (e) {

      // workaround since element is diabled
      if (e.target.attributes.getNamedItem('#disable-download-link')) {
        Swal.fire({
          title: `Restricted access feature`,
          text: 'This feature is too powerful for public use, reach out on one of the social media for access',
          icon: 'info',
          confirmButtonText: 'Back to Upload'
        })
      }
    });

    // TODO: add this download link
    function isValidLink(input) {
      const pattern = /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/;
      return pattern.test(input);
    }

    $('.paste-button').click(function(event) {
      l('clicked!');
      l('pasteButtonTurnedOff', pasteButtonTurnedOff);

      if(pasteButtonTurnedOff) {
        return;
      }

      navigator.clipboard.readText().then(clipText => {
        $('#downloadLink').val(clipText);
        updateCss()
      });
    });

    function updateCss(){
      const currentInputValue = $('#downloadLink').val();

      l('currentInputValue', currentInputValue);

      // if downloadlink is empty
      const inputIsEmpty = currentInputValue === '';

      // re-enable file input
      if (inputIsEmpty) {
        $('#file').removeClass('file-turned-off');
      } else {
      // disable file input
        l('turning off paste button')
        // re-enable file input and paste button
        $('#file').addClass('file-turned-off');
      }
    }

    $('#downloadLink').keyup(() => {
      updateCss()
    });

    $('#downloadLink').change(() => {
      updateCss()
    });

    $('#file').change(function () {
      // there was a file present
      if ($('#file')[0]?.files?.length > 0) {
        $('#downloadLink').addClass('file-turned-off');
        $('.paste-button').addClass('file-turned-off');

        $('#downloadLink').attr('placeholder', 'You have selected a file to upload');
        pasteButtonTurnedOff = true;

        l('file added')
      // a file that was there was removed
      } else {
        $('#downloadLink').removeClass('file-turned-off');
        $('.paste-button').removeClass('file-turned-off');

        $('#downloadLink').attr('placeholder', 'Enter a link to a video here');

        pasteButtonTurnedOff = false;


        l('file removed')
      }
    });

